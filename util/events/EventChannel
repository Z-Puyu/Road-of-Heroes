using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;

namespace Game.util.events {
    /// <summary>
    /// Encapsulates a global event bus handling events of type <typeparamref name="E"/>.
    /// </summary>
    /// <typeparam name="E">The type of events handled by the channel.</typeparam>
    public static class EventChannel<E> where E : EventArgs {
        public delegate void EventTriggeredAction(E e);

        private static EventTriggeredAction OnEvent { set; get; } = _ => {};

        public static void Register(EventChannel<E>.EventTriggeredAction action) {
            EventChannel<E>.OnEvent += action;
        }

        public static void Unregister(EventChannel<E>.EventTriggeredAction action) {
            EventChannel<E>.OnEvent -= action;
        }

        public static void Publish(E e) {
            EventChannel<E>.OnEvent(e);
        }
    }
}